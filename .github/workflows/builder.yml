name: singularity-deploy

on:
  push:
    branches:
      - "main"

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    env:
      WF_NAME: .github/workflows/builder.yml
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get Latest Tag
        run: |
            # Get the latest tag, we won't build if it's the current
            git fetch --tags
            latest_tag=$(git tag | tail -1)
            echo "latest_tag=$latest_tag" >> $GITHUB_ENV
      - name: Define Repository Name and Release Version
        run: |
            repo=$(echo "${GITHUB_REPOSITORY/\//-}")
            release=$(cat VERSION)
            echo "reponame=$repo" >> $GITHUB_ENV
            echo "release_tag=$release" >> $GITHUB_ENV
      - name: Define Start Commit
        if: ${{ env.release_tag != env.latest_tag }}
        run: |
            start_commit=${latest_tag}
            if [ "${start_commit}" != "" ]; then
              WF_FILE_CHANGE=$(git diff --diff-filter=AMR --name-only ${start_commit} HEAD | { grep "${WF_NAME}" || [[ $? == 1 ]]; })
              if [ "${WF_FILE_CHANGE}" == "${WF_NAME}" ]; then
                # Clean start_commit
                start_commit=""
              fi
            fi
            COMMIT_MESSAGE="${{ github.event.head_commit.message }}"
            if [ "${COMMIT_MESSAGE,,}" == "update all" ]; then
              start_commit=""
            fi
            echo "start_commit=${start_commit}" >> $GITHUB_ENV
      - uses: eWaterCycle/setup-singularity@v7
        if: ${{ env.release_tag != env.latest_tag }}
        with:
          singularity-version: 3.8.3
      - name: Build the singularity container
        if: ${{ env.release_tag != env.latest_tag }}
        run: |
            if [ "${start_commit}" == "" ]; then
              recipes=$(find . -type f -regextype posix-extended -regex ".*/Singularity(\..*)?")
              #recipes=$(find . -type f \( -name "Singularity.*" -o -name "Singularity" \))
            else
              recipes=$(git diff --diff-filter=AMR --name-only ${start_commit} HEAD | { grep "Singularity" || [[ $? == 1 ]]; })
            fi
            image_built="false"
            # For each Singularity* container, build based on the prefix (tag)
            for recipe in ${recipes}; do
                echo "Building $recipe"
                tag=$(echo "${recipe/*Singularity\./}")
                # If we find empty, use latest
                if [ "$tag" == "${recipe}" ]; then
                    tag="latest"
                fi
                # Build the container and name by tag
                echo "Tag is $tag."
                container="$reponame:$tag.sif"
                singularity build --fakeroot container.sif "$recipe"
                if [ "$?" == "0" ]; then
                    echo "Successfully built container $container."
                    mv container.sif "$container"
                    image_built="true"
                else
                    echo "There was an issue building $container."
                fi
            done
            echo "image_built=$image_built" >> $GITHUB_ENV
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        if: ${{ env.image_built == 'true' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.release_tag }}
          release_name: Release ${{ env.release_tag }}
          draft: false
          prerelease: false
      - name: Upload Release Assets
        if: ${{ env.image_built == 'true' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          tag_name: ${{ env.release_tag }}
        run: |
          hub release edit $(find . -type f -name "*.sif" -printf "-a %p ") -m "" "$tag_name"
