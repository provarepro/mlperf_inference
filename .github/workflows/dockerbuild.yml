name: docker-build

on:
  push:
    branches: [ main ]


jobs:
  build_docker:
    runs-on: ubuntu-latest
    env:
      DOCKER_ORG: provarepro
    if: "startsWith(github.event.head_commit.message, 'Build docker:')"

    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Define container info
        id: info
        run: |
          SW_NAME=$(echo ${GITHUB_REPOSITORY##*/} | sed 's/ *$//g')
          DOCKER_SW_NAME=${SW_NAME,,}
          COMMIT_MESSAGE="${{ github.event.head_commit.message }}"
          echo "COMMIT_MESSAGE: ${COMMIT_MESSAGE}"
          SW_TAG=${COMMIT_MESSAGE#*"Build docker:"}
          SW_TAG=$(echo ${SW_TAG%%,*} | sed 's/ *$//g' | sed -e 's/\s.*$//')
          echo "SW_TAG: ${SW_TAG}"
          DOCKERFILEPATH=$(find . -name "${SW_TAG}.dockerfile")
          CONTEXT_PATH=${DOCKERFILEPATH%/*}
          IMAGE_NAME="${DOCKER_ORG}/${DOCKER_SW_NAME}:${SW_TAG}"
          echo "IMG: ${IMAGE_NAME}"

          echo ::set-output name=context_path::${CONTEXT_PATH}
          echo ::set-output name=dockerfile::"${DOCKERFILEPATH}"
          echo ::set-output name=image_name::${IMAGE_NAME}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: ${{ steps.info.outputs.context_path }}
          file: ${{ steps.info.outputs.dockerfile }}
          push: true
          tags: ${{ steps.info.outputs.image_name }}
          cache-from: ${{ steps.info.outputs.image_name }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
